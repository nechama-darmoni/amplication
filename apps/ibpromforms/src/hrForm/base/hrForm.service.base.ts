/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, HrForm as PrismaHrForm } from "@prisma/client";

export class HrFormServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.HrFormCountArgs, "select">): Promise<number> {
    return this.prisma.hrForm.count(args);
  }

  async hrForms(args: Prisma.HrFormFindManyArgs): Promise<PrismaHrForm[]> {
    return this.prisma.hrForm.findMany(args);
  }
  async hrForm(
    args: Prisma.HrFormFindUniqueArgs
  ): Promise<PrismaHrForm | null> {
    return this.prisma.hrForm.findUnique(args);
  }
  async createHrForm(args: Prisma.HrFormCreateArgs): Promise<PrismaHrForm> {
    return this.prisma.hrForm.create(args);
  }
  async updateHrForm(args: Prisma.HrFormUpdateArgs): Promise<PrismaHrForm> {
    return this.prisma.hrForm.update(args);
  }
  async deleteHrForm(args: Prisma.HrFormDeleteArgs): Promise<PrismaHrForm> {
    return this.prisma.hrForm.delete(args);
  }
}
